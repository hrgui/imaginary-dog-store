{"version":3,"sources":["marketplace/ApiClient/ApiClient.ts","marketplace/AnimalViewPage.tsx","marketplace/SearchFilters.tsx","marketplace/AnimalCell.tsx","marketplace/AnimalsGrid.tsx","marketplace/AnimalsPage.tsx","marketplace/AnimalTypeCell.tsx","marketplace/AnimalTypesGrid.tsx","marketplace/AnimalTypesPage.tsx","marketplace/CollectionPage.tsx","marketplace/CheckoutPage.tsx","AppController.tsx","App.tsx","index.tsx","mocks/handlers.ts","mocks/browser.ts"],"names":["filters","a","params","URLSearchParams","fetch","toString","res","json","getAnimalTypes","id","getCollection","checkout","cart","method","headers","body","JSON","stringify","addItemToCart","data","getCart","AnimalViewPage","useParams","useQuery","getAnimal","isLoading","isError","item","useMutation","doAddItemToCart","history","useHistory","push","name","src","large_img","alt","price","onClick","handleBuyItem","SearchFilters","onFilterChange","style","React","useState","min_price","minPrice","setMinPrice","max_price","maxPrice","setMaxPrice","search","setSearch","handleFilterChange","diff","type","placeholder","value","onChange","e","target","min","step","max","proposedValue","htmlFor","toFixed","AnimalCell","onView","isCollection","hasBuyNow","margin","cursor","width","height","background","thumbnail","ItemsGrid","onItemView","animals","length","display","flexWrap","map","AnimalsPage","useLocation","get","type_id","setFilters","getAnimals","items","useEffect","replace","marginLeft","AnimalTypeCell","animal_type","animalTypeData","low","high","count","to","textDecoration","AnimalTypesGrid","animal_types","AnimalTypesPage","CollectionPage","d","CheckoutPage","doCheckout","reduce","total","queryCache","QueryCache","AppController","basename","process","path","exact","component","App","worker","require","window","location","pathname","start","serviceWorker","url","ReactDOM","render","StrictMode","document","getElementById","bootstrap","animalTypes","myCollection","fuse","Fuse","keys","sortAnimalsWithTypeDesc","allAnimalsWithType","filter","animal","sort","b","handlers","rest","post","req","ctx","username","firstName","lastName","returnedAnimals","searchParams","has","typeIdToSearch","indexOf","x","itemId","status","_animal","theAnimalTypeToDecrease","animalType","findLowestPricedAnimal","concat","setupWorker"],"mappings":"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","file":"static/js/main.20262b90.chunk.js","sourcesContent":["export async function getAnimals(filters: PetFilters) {\n  const params = new URLSearchParams(filters as any);\n\n  // params.toString();\n\n  const res = await fetch(`/api/search/animals?${params.toString()}`);\n  return res.json();\n}\n\n\nexport async function getAnimalTypes() {\n  const res = await fetch('/api/search/animal_type');\n  return res.json();\n}\n\n\nexport async function getAnimal(id: number | string) {\n  const res = await fetch(`/api/animal/${id}`);\n  return res.json();\n}\n\nexport async function getCollection() {\n  const res = await fetch(`/api/collection`);\n  return res.json();\n}\n\nexport async function checkout(cart: Animal[]) {\n  const res = await fetch(`/api/checkout`, {method: \"POST\", headers: {\n    'Accept': 'application/json',\n    'Content-Type': 'application/json'\n  }, body: JSON.stringify(cart)});\n  return res.json();\n}\n\nexport async function addItemToCart(data: Animal) {\n  const res = await fetch(`/api/cart`, {method: \"POST\", headers: {\n    'Accept': 'application/json',\n    'Content-Type': 'application/json'\n  }, body: JSON.stringify(data)});\n  return res.json();\n}\n\nexport async function getCart() {\n  const res = await fetch(`/api/cart`);\n  return res.json();\n}\n","import React, { ReactElement } from \"react\";\nimport { useMutation } from \"react-query\";\nimport { useQuery } from \"react-query\";\nimport { useHistory, useParams } from \"react-router\";\nimport { getAnimal, addItemToCart } from \"./ApiClient/ApiClient\";\n\nexport default function AnimalViewPage(): ReactElement {\n  const { id } = useParams<{ id: string }>();\n  const { isLoading, isError, data: item } = useQuery<any>(`item${id}`, () => getAnimal(id));\n  const [doAddItemToCart] = useMutation<any, any, Animal>(addItemToCart);\n  const history = useHistory();\n\n  async function handleBuyItem(item: Animal) {\n    await doAddItemToCart(item);\n    return history.push(\"/checkout\");\n  }\n\n  if (isLoading) {\n    return <div>Loading</div>;\n  }\n\n  if (isError) {\n    return <div>Error</div>;\n  }\n\n  if (!item) {\n    return (\n      <div>\n        <h1>Not found</h1>\n      </div>\n    );\n  }\n\n  return (\n    <div>\n      <h1>{item.name}</h1>\n      <img src={item.large_img} alt={item.name} />\n      <h3>${item.price}</h3>\n      <button onClick={() => handleBuyItem(item)}>Buy Now</button>\n    </div>\n  );\n}\n","import React, { ReactElement } from \"react\";\n\ninterface Props {\n  onFilterChange: (filters: PetFilters) => any; \n  style?: React.CSSProperties;\n  filters: PetFilters;\n}\n\nexport default function SearchFilters({onFilterChange, filters, style}: Props): ReactElement {\n  const [minPrice, setMinPrice] = React.useState(filters.min_price);\n  const [maxPrice, setMaxPrice] = React.useState(filters.max_price);\n  const [search, setSearch] = React.useState(filters.name);\n\n  function handleFilterChange(diff: Partial<PetFilters>) {\n    // TODO: should do a deep merge\n    onFilterChange({...filters, ...diff});\n  }\n\n  function handleMinPriceChange(e:React.ChangeEvent<HTMLInputElement>) {\n    const proposedValue = + e.target.value;\n\n    if (proposedValue > maxPrice) {\n      return;\n    }\n\n    setMinPrice(proposedValue);\n    handleFilterChange({min_price: proposedValue});\n  }\n\n  function handleMaxPriceChange(e:React.ChangeEvent<HTMLInputElement>) {\n    const proposedValue = + e.target.value;\n\n    if (proposedValue < minPrice) {\n      return;\n    }\n\n    setMaxPrice(proposedValue);\n    handleFilterChange({max_price: proposedValue});\n  }\n\n  function handleSearchChange(e: React.ChangeEvent<HTMLInputElement>) {\n    setSearch(e.target.value);\n    handleFilterChange({name: e.target.value});\n  }\n\n  return (\n    <div style={style}>\n      <div>\n        <input type=\"text\" placeholder=\"Search\" value={search} onChange={handleSearchChange} />\n      </div>\n      <div>\n        <input type=\"range\" id=\"price\" name=\"price\" min=\"0\" step={10} max=\"100\" value={minPrice} onChange={handleMinPriceChange} />\n        <label htmlFor=\"price\">Min Price ${minPrice.toFixed(2)}</label>\n      </div>\n      <div>\n        <input type=\"range\" id=\"price\" name=\"price\" min=\"0\" step={10} max=\"100\" value={maxPrice} onChange={handleMaxPriceChange} />\n        <label htmlFor=\"price\">Max Price: ${maxPrice.toFixed(2)}</label>\n      </div>\n    </div>\n  );\n}\n","import { ReactElement } from \"react\";\nimport { useHistory } from \"react-router\";\nimport { useMutation } from \"react-query\";\nimport { addItemToCart } from \"./ApiClient/ApiClient\";\n\ninterface Props {\n  item: Animal;\n  onView?: (item: Animal) => any;\n  hasBuyNow?: boolean;\n  isCollection?: boolean;\n}\n\nexport default function AnimalCell({ item, onView, isCollection = false, hasBuyNow = false }: Props): ReactElement {\n  const history = useHistory();\n  const [doAddItemToCart] = useMutation<any, any, Animal>(addItemToCart);\n\n  async function handleBuyItem(item: Animal) {\n    await doAddItemToCart(item);\n    return history.push(\"/checkout\");\n  }\n\n\n  return (\n    <div style={{ margin: \"8px\", cursor: !isCollection ? \"pointer\" : \"auto\" }} onClick={() => !isCollection && onView?.(item)}>\n      <h2>{item.name}</h2>\n      <div style={{width: 300, height: 300, background: \"#ccc\"}}>\n        <img src={item.thumbnail} width={300} height={300} alt={item.name} />\n      </div>\n      {!isCollection && <h3>${item.price}</h3>}\n      {hasBuyNow && <button onClick={() => handleBuyItem(item)}>Buy Now</button>}\n    </div>\n  );\n}\n","import React, { ReactElement } from \"react\";\nimport Animal from \"./AnimalCell\";\n\ninterface Props {\n  style?: React.CSSProperties;\n  animals: Animal[];\n  onItemView: (item: Animal) => any;\n  isLoading?: boolean;\n}\n\nexport default function ItemsGrid({ style, isLoading, onItemView, animals }: Props): ReactElement {\n  return (\n    <div style={style}>\n      {!isLoading && <div>Showing {animals.length} animals</div>}\n      <div style={{ display: \"flex\", flexWrap: \"wrap\" }}>\n        {animals.map((item) => {\n          return <Animal hasBuyNow onView={onItemView} item={item} key={item.id} />;\n        })}\n      </div>\n    </div>\n  );\n}\n","import React, { ReactElement, useEffect } from \"react\";\nimport SearchFilters from \"./SearchFilters\";\nimport ItemsGrid from \"./AnimalsGrid\";\nimport { useHistory, useLocation } from \"react-router\";\nimport { useQuery } from \"react-query\";\nimport { getAnimals } from \"./ApiClient/ApiClient\";\n\n// A custom hook that builds on useLocation to parse\n// the query string for you.\nfunction useQueryParams() {\n  return new URLSearchParams(useLocation().search);\n}\n\nexport default function AnimalsPage(): ReactElement {\n  const params = useQueryParams();\n  const [filters, setFilters] = React.useState<PetFilters>({\n    min_price: +params.get(\"min_price\")! || 0,\n    max_price: +params.get(\"max_price\")! || 100,\n    name: params.get(\"name\") || \"\",\n    type_id: params.get(\"type_id\") || null,\n  });\n  const { isLoading, data: items = [] } = useQuery<any, any>([\"items\", filters], () =>\n    getAnimals(filters)\n  );\n  const history = useHistory();\n\n  useEffect(() => {\n    history.replace(`/animals?${new URLSearchParams(filters as any).toString()}`);\n  }, [history, filters]);\n\n  return (\n    <div style={{ display: \"flex\" }}>\n      <SearchFilters\n        filters={filters}\n        style={{ width: \"25%\" }}\n        onFilterChange={(filters) => setFilters(filters)}\n      />\n      <ItemsGrid\n        isLoading={isLoading}\n        animals={items}\n        style={{ marginLeft: \"8px\", width: \"75%\" }}\n        onItemView={({ id }) => history.push(`/item/${id}`)}\n      />\n    </div>\n  );\n}\n","import React, { ReactElement } from \"react\";\nimport { Link } from \"react-router-dom\";\n\ninterface Props {\n  animal_type: AnimalType;\n}\n\nexport default function AnimalTypeCell({ animal_type }: Props): ReactElement {\n  const animalTypeData = (\n    <div style={{ margin: \"8px\", cursor: \"pointer\" }}>\n      <h2>{animal_type.name}(s)</h2>\n      <div style={{ width: 300, height: 300, background: \"#ccc\" }}>\n        <img src={animal_type.thumbnail} width={300} height={300} alt={animal_type.name} />\n      </div>\n      {animal_type.low?.price && <h3>Lowest Price: ${animal_type.low?.price}</h3>}\n      {animal_type.high?.price && <h3>Highest Price: ${animal_type.high?.price}</h3>}\n      {animal_type.count <= 0 && <h4>SOLD OUT</h4>}\n      {animal_type.count <= 10 && animal_type.count > 0 && <h4>Only {animal_type.count} left!</h4>}\n    </div>\n  );\n\n  if (animal_type.count <= 0) {\n    return animalTypeData;\n  }\n\n  return (\n    <Link to={`/animals?type_id=${animal_type.id}`} style={{ textDecoration: \"none\" }}>\n      {animalTypeData}\n    </Link>\n  );\n}\n","import React, { ReactElement } from \"react\";\nimport AnimalTypeCell from \"./AnimalTypeCell\";\n\ninterface Props {\n  style?: React.CSSProperties;\n  animal_types: AnimalType[];\n  onItemView: (item: AnimalType) => any;\n}\n\nexport default function AnimalTypesGrid({ style, animal_types}: Props): ReactElement {\n  return (\n    <div style={style}>\n      <div>Showing {animal_types.length} pet types</div>\n      <div style={{ display: \"flex\", flexWrap: \"wrap\" }}>\n        {animal_types.map((animal_type) => {\n          return <AnimalTypeCell animal_type={animal_type} />\n        })}\n      </div>\n    </div>\n  );\n}\n","import React, { ReactElement } from \"react\";\nimport ItemsGrid from \"./AnimalTypesGrid\";\nimport { useHistory } from \"react-router\";\nimport {useQuery} from 'react-query';\nimport {getAnimalTypes} from './ApiClient/ApiClient';\n\n\nexport default function AnimalTypesPage(): ReactElement {\n  const {isLoading, data: items = []} = useQuery<any, any>(\"items\", getAnimalTypes);\n  const history = useHistory();\n\n  if (isLoading) {\n    return <div>Loading</div>\n  }\n  return (\n    <div style={{ display: \"flex\" }}>\n      <ItemsGrid\n        animal_types={items}\n        style={{ marginLeft: \"8px\", width: \"75%\" }}\n        onItemView={({ id }) => history.push(`/item/${id}`)}\n      />\n    </div>\n  );\n}\n","import React, { ReactElement } from \"react\";\nimport { useQuery } from \"react-query\";\nimport { useHistory } from \"react-router\";\nimport { getCollection } from \"./ApiClient/ApiClient\";\nimport Animal from \"./AnimalCell\";\n\nexport default function CollectionPage(): ReactElement {\n  const history = useHistory();\n  const { isLoading, data: items } = useQuery<any>(\"collection\", getCollection);\n\n  if (isLoading) {\n    return <div>Loading</div>;\n  }\n\n  if (!items || !items.length) {\n    return <div>No items found.</div>\n  }\n\n  return (\n    <div style={{display: \"flex\", flexWrap: \"wrap\"}}>\n      {items.map((d: Animal) => {\n        return (\n          <div key={d.id}>\n            <Animal isCollection item={d} onView={(e) => history.push(`/item/${d.id}`)} />\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n","import React, { ReactElement } from 'react'\nimport { useMutation } from 'react-query';\nimport { useQuery } from 'react-query';\nimport { useHistory } from 'react-router';\nimport {getCart, checkout} from './ApiClient/ApiClient';\nimport Animal from './AnimalCell';\n\nfunction getTotal(items: Animal[]) {\n  return items.reduce((total, item) => {\n    return (+item.price) + total\n  }, 0).toFixed(2);\n}\n\nexport default function CheckoutPage(): ReactElement {\n  const {data, isLoading} = useQuery<Animal[]>('cart', getCart);\n  const [doCheckout] = useMutation(checkout);\n  const history = useHistory();\n\n  async function doPayNow() {\n    await doCheckout(data);\n    history.push('/collection');\n  }\n\n  if(isLoading) {\n    return <div>Loading cart</div>\n  }\n\n  if (!data || !data.length) {\n    return <h2>Put items in cart to checkout</h2>\n  }\n\n  return (\n    <div>\n      <h1>Checkout</h1>\n      {data.map(item => {\n        return <Animal item={item} />\n      })}\n\n      <h1>Total: ${getTotal(data)}</h1>\n      <button onClick={doPayNow}>Pay now</button>\n    </div>\n  )\n}\n","import React from 'react';\nimport {ReactQueryCacheProvider, QueryCache } from 'react-query';\nimport {BrowserRouter as Router, Link, Route} from 'react-router-dom';\nimport AnimalViewPage from './marketplace/AnimalViewPage';\nimport AnimalsPage from './marketplace/AnimalsPage';\nimport AnimalTypesPage from './marketplace/AnimalTypesPage';\nimport CollectionPage from './marketplace/CollectionPage';\nimport CheckoutPage from './marketplace/CheckoutPage';\n\nconst queryCache = new QueryCache();\n\nexport function AppController() {\n  return <ReactQueryCacheProvider queryCache={queryCache}>\n  <Router basename={process.env.PUBLIC_URL}>\n    <div>\n      <Link to=\"/\">Find a Item</Link> | <Link to=\"/collection\">Collection</Link>\n    </div>\n    <Route path=\"/\" exact component={AnimalTypesPage} />\n    <Route path=\"/animals\" exact component={AnimalsPage} />\n    <Route path=\"/collection\" exact component={CollectionPage} />\n    <Route path=\"/item/:id\" exact component={AnimalViewPage} />\n    <Route path=\"/checkout\" exact component={CheckoutPage} />\n  </Router>\n  </ReactQueryCacheProvider>\n}","import React from 'react';\nimport {AppController} from './AppController';\nimport './App.css';\n\nfunction App() {\n  return (\n    <AppController />\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nconst { worker } = require('./mocks/browser');\n\nasync function bootstrap() {\n  if (window.location.pathname === process.env.PUBLIC_URL) {\n    window.location.pathname = process.env.PUBLIC_URL + '/';\n    return;\n  }\n  await worker.start({\n    serviceWorker: {url: process.env.PUBLIC_URL + '/mockServiceWorker.js'}\n  });\n  ReactDOM.render(\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n  );  \n}\n\nbootstrap();\n\n\n","import { MockedRequest, rest } from 'msw'\nimport Fuse from 'fuse.js';\nlet animals: Animal[] = require(\"../fixtures/animals.json\");\nlet animalTypes: AnimalType[] = require(\"../fixtures/animal_types.json\");\nlet myCollection: any[] = [];\nlet cart: any[] = [];\n\nconst fuse = new Fuse(animals, {keys: ['name']});\n\nfunction sortAnimalsWithTypeDesc(type_id: string) {\n  const allAnimalsWithType = animals.filter(animal => animal.type_id === type_id);\n  allAnimalsWithType.sort((a, b) => +b.price - +a.price);\n\n  return allAnimalsWithType;\n}\n\nfunction findLowestPricedAnimal(animalType: AnimalType) {\n  const allAnimalsWithType = sortAnimalsWithTypeDesc(animalType.id);\n  return allAnimalsWithType[allAnimalsWithType.length - 1];\n}\n\nfunction findHighestPricedAnimal(animalType: AnimalType) {\n  const allAnimalsWithType = sortAnimalsWithTypeDesc(animalType.id);\n  return allAnimalsWithType[0];\n}\n\nexport const handlers = [\n  rest.post('/login', (req: MockedRequest<any>, res, ctx) => {\n    const { username } = req.body;\n\n    return res(\n      ctx.json({\n        id: 'f79e82e8-c34a-4dc7-a49e-9fadc0979fda',\n        username,\n        firstName: 'Animal',\n        lastName: 'Lover',\n      })\n    )\n  }),\n  rest.get('/api/search/:type', (req: MockedRequest<any, AnimalSearchParams>, res, ctx) => {\n    const {type} = req.params;\n\n    if (type === \"animal_type\") {\n      return res(ctx.json(animalTypes));\n    }\n\n    // otherwise type is animals\n    let returnedAnimals = animals;\n\n    if (req.url.search) {\n\n      if (req.url.searchParams.has('type_id')) {\n        const typeIdToSearch = req.url.searchParams.get('type_id');\n        const typeIds = animalTypes.map(animal => animal.id);\n\n        const isValidTypeId = typeIds.indexOf(typeIdToSearch!) !== -1;\n\n        if (isValidTypeId) {\n          returnedAnimals = returnedAnimals.filter(animal => {\n            return animal.type_id === typeIdToSearch;\n          });\n        }\n      }\n\n      if (req.url.searchParams.has('min_price') && req.url.searchParams.get('min_price')) {\n        returnedAnimals = returnedAnimals.filter(animal => {\n          return +req.url.searchParams.get('min_price')! <= +animal.price;\n        });\n      }\n\n      if (req.url.searchParams.has('max_price')) {\n        returnedAnimals = returnedAnimals.filter(animal => {\n          return +animal.price <= +req.url.searchParams.get('max_price')!;\n\n        });\n      }\n\n      if (req.url.searchParams.has('name') && req.url.searchParams.get('name')) {\n        returnedAnimals = fuse.search(req.url.searchParams.get('name')!).map(x => x.item);\n      }\n    }\n    \n\n    return res(\n      ctx.json(returnedAnimals)\n    )\n  }),\n  rest.get('/api/cart', (req: MockedRequest<Animal>, res, ctx) => {\n    return res(ctx.json(cart));\n  }),\n  rest.post('/api/cart', (req: MockedRequest<Animal>, res, ctx) => {\n    const item = req.body;\n    cart.push(item);\n\n    return res(ctx.json(cart));\n  }),\n  rest.get('/api/animal/:itemId', (req: MockedRequest<any, {itemId: string}>, res, ctx) => {\n    const {itemId} = req.params;\n\n    const item: Animal = animals.filter((item: Animal) => (item.id + \"\") === itemId)?.[0];\n\n    if (!item) {\n      return res(ctx.status(404));\n    }\n\n    return res(\n      ctx.json(item)\n    );\n  }),\n  rest.get('/api/collection', (req, res, ctx) => {\n    return res(ctx.json(myCollection));\n  }),\n  rest.post('/api/checkout', (req: MockedRequest<Animal[]>, res, ctx) => {\n    const body = req.body;\n\n    for (const animal of body) {\n      animals = animals.filter(_animal => animal.id !== _animal.id);\n      const theAnimalTypeToDecrease = animalTypes.filter(animalType => animalType.id === animal.type_id)[0];\n\n      theAnimalTypeToDecrease.count = theAnimalTypeToDecrease.count - 1;\n      \n      if (theAnimalTypeToDecrease.low?.id === animal.id) {\n        theAnimalTypeToDecrease.low = findLowestPricedAnimal(theAnimalTypeToDecrease);\n      }\n\n      if (theAnimalTypeToDecrease.high?.id === animal.id) {\n        theAnimalTypeToDecrease.high = findHighestPricedAnimal(theAnimalTypeToDecrease);\n      }\n    }\n\n    myCollection = myCollection.concat(body);\n    cart = [];\n    return res(ctx.json(myCollection));\n  })\n]","import { setupWorker } from 'msw'\nimport { handlers } from './handlers'\n\nexport const worker = setupWorker(...handlers)"],"sourceRoot":""}